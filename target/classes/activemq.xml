<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.12.1.xsd"
>

    <context:component-scan base-package="com.yaming.message.activemq.queue" />
    <context:component-scan base-package="com.yaming.message.activemq.topic"/>
    <mvc:annotation-driven />

    <!--Spring提供的ConnectionFactory只是Spring用于管理ConnectionFactory的，-->
    <!--真正产生到JMS服务器链接的ConnectionFactory还得是由JMS服务厂商提供，-->
    <!--并且需要把它注入到Spring提供的ConnectionFactory中。我们这里使用的是ActiveMQ实现的JMS，-->
    <!--所以在我们这里真正的可以产生Connection的就应该是由ActiveMQ提供的ConnectionFactory-->

    <!-- 配置ActiveMQ连接工厂，由ActiveMQ提供的ConnectionFactory
         真正可以产生connection的connectionFactory工厂,有JMS厂商提供
         如果连接网络：tcp://ip:61616；未连接网络：tcp://localhost:61616 以及用户名，密码-->
    <amq:connectionFactory id="amqConnectionFactory"
                           brokerURL="tcp://localhost:61616"
                           userName="admin"
                           password="admin" />

    <!-- Spring Caching连接工厂 -->
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <constructor-arg ref="amqConnectionFactory" />
        <!-- Session缓存数量 -->
    </bean>

    <!-- 定义消息队列（Queue） -->
    <bean id="demoQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>yaming.queue</value>
        </constructor-arg>
    </bean>
    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsqueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <property name="connectionFactory" ref="connectionFactory" />
        <!--默认目的地-->
        <property name="defaultDestination" ref="demoQueueDestination" />
        <!--接收消息超时时间-->
        <property name="receiveTimeout" value="100000" />
        <!-- true是topic，false是queue，默认是false，此处显示写出false
         是点对点的ActiveMQQueue-->
        <property name="pubSubDomain" value="false" />
    </bean>

    <!--&lt;!&ndash; 配置消息队列监听者（Queue）（即消费者） &ndash;&gt;-->
    <!--<bean id="queueMessageListener" class="com.yaming.message.activemq.listener.QueueMessageListener" />-->

    <!--&lt;!&ndash; 显示注入消息监听容器（Queue），配置连接工厂，监听的目标是demoQueueDestination，监听器是上面定义的监听器 &ndash;&gt;-->
    <!--<bean id="queueListenerContainer"-->
          <!--class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="connectionFactory" />-->
        <!--<property name="destination" ref="demoQueueDestination" />-->
        <!--<property name="messageListener" ref="queueMessageListener" />-->
    <!--</bean>-->

    <!--<bean id="queueMessageListener2" class="com.yaming.message.activemq.listener.QueueMessageListener2" />-->

    <!--&lt;!&ndash; 显示注入消息监听容器（Queue），配置连接工厂，监听的目标是demoQueueDestination，监听器是上面定义的监听器 &ndash;&gt;-->
    <!--<bean id="queueListenerContainer2"-->
          <!--class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="connectionFactory" />-->
        <!--<property name="destination" ref="demoQueueDestination" />-->
        <!--<property name="messageListener" ref="queueMessageListener2" />-->
    <!--</bean>-->

    <!--定义消息主题的名字(topic)-->
    <bean  id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg >
            <value>yaming.topic</value>
        </constructor-arg>
    </bean>

     <!--定义JmsTemplate的Topic类型 -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="topicDestination"/>
        <property name="receiveTimeout" value="100000"/>
        <!-- pub/sub模型（发布/订阅） -->
        <property name="pubSubDomain" value="true" />
    </bean>
    <!--topic监听器-->
  <!--<bean id="topicMessageListener" class="com.yaming.message.activemq.listener.TopicMessageListener"/>-->
    <!--<bean id="topicJmsContainer"-->
          <!--class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="connectionFactory" />-->
        <!--<property name="destination" ref="topicDestination" />-->
        <!--<property name="messageListener" ref="topicMessageListener"/>-->
    <!--</bean>-->

    <!--<bean id="topicMessageListener2" class="com.yaming.message.activemq.listener.TopicMessageListener2"/>-->
    <!--<bean id="topicJmsContainer2"-->
          <!--class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
    <!--<property name="connectionFactory" ref="connectionFactory" />-->
    <!--<property name="destination" ref="topicDestination" />-->
    <!--<property name="messageListener" ref="topicMessageListener2"/>-->
    <!--</bean>-->
</beans>